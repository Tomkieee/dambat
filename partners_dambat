<!-- CSS -->
<style>
.partner-locator {
  max-width: 800px;
  margin: 3rem auto;
  padding: 2rem;
  background-color: #ffffff;
  border-radius: 16px;
  box-shadow: 0 4px 16px rgba(0,0,0,0.08);
  font-family: 'Poppins', sans-serif;
  border: 1px solid #eee;
}

.loader {
  text-align: center;
  color: #1b4279;
  font-weight: bold;
  padding: 1rem;
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.4; }
  100% { opacity: 1; }
}

.partner-locator .logo {
  display: block;
  margin: 0 auto 1rem auto;
  max-height: 60px;
}

.partner-locator h2 {
  font-size: 1.75rem;
  margin-bottom: 1.5rem;
  color: #1b4279;
  text-align: center;
}

.partner-locator input,
.partner-locator button {
  width: 100%;
  padding: 0.75rem 1rem;
  border-radius: 8px;
  font-size: 1rem;
}

.partner-locator input {
  border: 1px solid #ccc;
  margin-bottom: 1rem;
}

.partner-locator button {
  background-color: #1b4279;
  color: white;
  border: none;
  cursor: pointer;
  transition: background-color 0.2s;
}

.partner-locator button:hover {
  background-color: #14315c;
}

.results {
  margin-top: 2rem;
}

/* Nowy wygląd wyników */
.result-card {
  background: #f9f9f9;
  border: 1px solid #ddd;
  border-radius: 16px;
  padding: 1rem;
  margin-bottom: 2rem;
  text-align: center;
  box-shadow: 0 4px 12px rgba(0,0,0,0.05);
}

.result-logo-wrapper {
  background: #fff;
  padding: 1rem;
  border-radius: 12px;
  border: 1px solid #ddd;
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  max-height: 140px;
  overflow: hidden;
}

.result-logo {
  max-height: 120px;
  max-width: 100%;
  object-fit: contain;
}

.result-info a {
  font-weight: bold;
  color: #1b4279;
  font-size: 1.1rem;
  text-decoration: none;
}

.result-info a:hover {
  text-decoration: underline;
}

.result-info p {
  margin: 0.25rem 0;
  color: #555;
  font-size: 0.95rem;
}

.partner-locator .captcha-wrapper {
  text-align: center;
  margin-bottom: 1rem;
}

@media (max-width: 480px) {
  .partner-locator {
    padding: 1rem;
  }
  .result-card {
    padding: 1rem 0.5rem;
  }
}
</style>
<!-- HTML -->
<div class="partner-locator">
  <img src="https://dambat.pl/cdn/shop/files/dambat-logo-orange_150x@2x.png?v=1675760777" alt="Dambat Logo" class="logo">
  <h2>Znajdź sklep partnerski Dambat w pobliżu</h2>
  <form id="locationForm">
    <input type="text" id="addressInput" placeholder="Wpisz swój adres (np. Warszawa, ul. Zielona 12)" required>
<div class="captcha-wrapper">
<div class="captcha-wrapper">
  <div class="h-captcha" data-sitekey="97f6cdd8-2386-4c9e-bbba-ab54bd60e474"></div>
</div>
    <button type="submit">Szukaj</button>
  
  <div id="results" class="results"></div>
  <div id="loader" class="loader" style="display: none;">🔎 Wyszukiwanie sklepów...</div>
</div>

<!-- Skrypty (Wklej tutaj) -->
<script src="https://js.hcaptcha.com/1/api.js" async defer></script>
<script src="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.2/mapbox-gl-geocoder.min.js"></script>
<script>
mapboxgl.accessToken = 'pk.eyJ1IjoidG9tYXN6ZmFzIiwiYSI6ImNtYTNqZjZlMjJiemoyanNnMXp2c2owejIifQ.Dy8RKaIlKXFBHCtB4hFP-g';

let stores = [];

fetch('https://partner-stores.tomasz-fastyn.workers.dev?key=XXXXX')
  .then(response => response.json())
  .then(data => {
    stores = data;
    // console.log("Dane sklepów:", stores);
  })
  .catch(err => {
    console.error('Błąd ładowania danych sklepów:', err);
  });

function getDistance(lat1, lon1, lat2, lon2) {
  const R = 6371;
  const dLat = (lat2 - lat1) * Math.PI / 180;
  const dLon = (lon2 - lon1) * Math.PI / 180;
  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(lat1*Math.PI/180) * Math.cos(lat2*Math.PI/180) *
            Math.sin(dLon/2) * Math.sin(dLon/2);
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
  return R * c;
}

function reorderAddress(input) {
  const parts = input.split(',').map(p => p.trim());
  if (parts.length === 2) {
    const hasDigit = /\d/.test(parts[0]);
    return hasDigit ? `${parts[0]}, ${parts[1]}` : `${parts[1]}, ${parts[0]}`;
  }
  return input;
}

function hasCheckedToday() {
  const lastCheck = localStorage.getItem('lastCheck');
  if (!lastCheck) return false;
  const diff = Date.now() - parseInt(lastCheck, 10);
  return diff < 86400000; // 24 godziny 86400000 do testów jest 2000
}

function setCheckedNow() {
  localStorage.setItem('lastCheck', Date.now().toString());
}

function shuffleArray(arr) {
  for (let i = arr.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

document.getElementById('locationForm').addEventListener('submit', function(e) {
  e.preventDefault();
  const rawInput = document.getElementById('addressInput').value.trim();
  const loader = document.getElementById('loader');
  const results = document.getElementById('results');
  results.innerHTML = '';

  if (hasCheckedToday()) {
    results.innerHTML = '<p>Już dziś sprawdzałeś najbliższą firmę. Jeśli szukasz sklepu z naszymi produktami, skontaktuj się z biurem Dambat - biuro@dambat.pl.</p>';
    return;
  }

const captchaResponse = document.querySelector('[name="h-captcha-response"]')?.value;
if (!captchaResponse) {
  results.innerHTML = '<p>Potwierdź, że nie jesteś robotem (hCaptcha).</p>';
  return;
}
  loader.style.display = 'block';
  const reorderedAddress = reorderAddress(rawInput);
  const query = encodeURIComponent(reorderedAddress);

  fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?access_token=${mapboxgl.accessToken}`)
    .then(res => res.json())
    .then(data => {
      loader.style.display = 'none';
      const features = data.features;
      if (!features.length || !features[0].geometry || !features[0].geometry.coordinates) {
        results.innerHTML = `<p>Nie można zlokalizować tego miejsca. Spróbuj wpisać dokładniejszy adres.</p>`;
        return;
      }

      const [lng, lat] = features[0].geometry.coordinates;
      const nearby = stores.filter(store => getDistance(lat, lng, store.lat, store.lng) <= 20);

      if (nearby.length === 0) {
        results.innerHTML = `<p>Brak sklepów w promieniu 20 km. Skontaktuj się z biurem Dambat, aby uzyskać pomoc - biuro@dambat.pl.</p>`;
        return;
      }

      const selected = shuffleArray(nearby)[0];
      setCheckedNow();

results.innerHTML = `
  <div class="result-card">
    <div class="result-logo-wrapper">
      <img src="${selected.image}" alt="${selected.name}" class="result-logo"/>
    </div>
    <div class="result-info">
      <a href="${selected.url}" target="_blank">${selected.name}</a>
      <p>${selected.address}</p>
      ${selected.phone ? `<p>📞 ${selected.phone}</p>` : ''}
      ${selected.email ? `<p>✉️ <a href='mailto:${selected.email}'>${selected.email}</a></p>` : ''}
    </div>
  </div>`;
    })
    .catch(err => {
      console.error(err);
      loader.style.display = 'none';
      results.innerHTML = `<p>Wystąpił problem podczas przetwarzania adresu. Spróbuj ponownie później.</p>`;
    });
});
</script>
</form>
</div>
